bash

pip install transformers torch





import torch
from transformers import GPT2LMHeadModel, GPT2Tokenizer

class ConversationalAI:
    def __init__(self):
        # Load pretrained GPT-2 model and tokenizer from Hugging Face
        self.model_name = 'gpt2'
        self.model = GPT2LMHeadModel.from_pretrained(self.model_name)
        self.tokenizer = GPT2Tokenizer.from_pretrained(self.model_name)
        self.model.eval()  # Set model to evaluation mode

    def generate_response(self, user_input):
        # Tokenize the input
        inputs = self.tokenizer.encode(user_input + self.tokenizer.eos_token, return_tensors='pt')
        
        # Generate response using GPT-2 model
        with torch.no_grad():
            outputs = self.model.generate(inputs, max_length=150, num_return_sequences=1, no_repeat_ngram_size=2, pad_token_id=self.tokenizer.eos_token_id)
        
        # Decode the output tokens to string
        response = self.tokenizer.decode(outputs[0], skip_special_tokens=True)
        return response

    def chat(self):
        print("Hello! I am your conversational AI. Type 'exit' to quit.")
        while True:
            user_input = input("You: ")
            if user_input.lower() == 'exit':
                print("Goodbye!")
                break
            response = self.generate_response(user_input)
            print(f"AI: {response}")

if __name__ == "__main__":
    ai = ConversationalAI()
    ai.chat()
